import os
import asyncio
import logging
import gspread

from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from google.oauth2.service_account import Credentials

# --- –õ–û–ì–ò ---
logging.basicConfig(level=logging.INFO)

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
BOT_TOKEN = os.getenv("BOT_TOKEN")  # —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ Environment Variables
ADMIN_ID = int(os.getenv("ADMIN_ID", "7145469393"))  # —Ç–≤–æ–π ID (–º–æ–∂–Ω–æ —Ç–æ–∂–µ –≤ Env)
GSHEET_ID = os.getenv("GSHEET_ID")  # ID —Ç–∞–±–ª–∏—Ü—ã

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö ---
if not BOT_TOKEN:
    raise ValueError("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
if not GSHEET_ID:
    raise ValueError("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω GSHEET_ID –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# --- Telegram bot ---
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# --- Google Sheets ---
CREDENTIALS_FILE = "/etc/secrets/GSPREAD_CREDENTIALS.json"

creds = Credentials.from_service_account_file(
    CREDENTIALS_FILE,
    scopes=["https://www.googleapis.com/auth/spreadsheets"]
)
gc = gspread.authorize(creds)
worksheet = gc.open_by_key(GSHEET_ID).sheet1

# --- –ö–ù–û–ü–ö–ò ---
def admin_keyboard():
    kb = [
        [KeyboardButton(text="üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ")],
        [KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å")],
        [KeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å")],
        [KeyboardButton(text="üö™ –í—ã–π—Ç–∏")]
    ]
    return ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)

# --- –ö–û–ú–ê–ù–î–ê /start ---
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç üëã –≠—Ç–æ –±–æ—Ç —Å Google Sheets!")

# --- –ö–û–ú–ê–ù–î–ê /admin ---
@dp.message(Command("admin"))
async def cmd_admin(message: types.Message):
    if message.from_user.id == ADMIN_ID:
        await message.answer("üîë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=admin_keyboard())
    else:
        await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")

# --- –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–ü–û–ö ---
@dp.message(F.text.in_(["üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ", "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å", "‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å", "üö™ –í—ã–π—Ç–∏"]))
async def handle_admin_buttons(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")
        return

    if message.text == "üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ":
        rows = worksheet.get_all_values()
        text = "\n".join([", ".join(row) for row in rows]) if rows else "üìÇ –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞"
        await message.answer(f"–î–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã:\n\n{text}")

    elif message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å":
        worksheet.append_row(["–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å"])
        await message.answer("‚úÖ –ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞!")

    elif message.text == "‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å":
        rows = worksheet.get_all_values()
        if len(rows) > 1:
            worksheet.delete_rows(len(rows))
            await message.answer("‚ùå –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞")
        else:
            await message.answer("‚ö†Ô∏è –£–¥–∞–ª—è—Ç—å –Ω–µ—á–µ–≥–æ")

    elif message.text == "üö™ –í—ã–π—Ç–∏":
        await message.answer("–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–¥–º–∏–Ω–∫–∏.", reply_markup=ReplyKeyboardRemove())

# --- –ó–ê–ü–£–°–ö ---
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

