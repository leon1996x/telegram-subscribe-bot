
gc = gspread.authorize(creds)
worksheet = gc.open_by_key(GSHEET_ID).sheet1

# --- FastAPI ---
app = FastAPI()

@app.get("/")
async def root():
    return {"status": "ok", "message": "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç üöÄ"}

# --- –ö–ù–û–ü–ö–ò ---
def admin_keyboard():
    kb = [
        [KeyboardButton(text="üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ")],
        [KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å")],
        [KeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å")],
        [KeyboardButton(text="üö™ –í—ã–π—Ç–∏")]
    ]
    return ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)

# --- –ö–û–ú–ê–ù–î–ê /start ---
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç üëã –≠—Ç–æ –±–æ—Ç —Å Google Sheets!")

# --- –ö–û–ú–ê–ù–î–ê /admin ---
@dp.message(Command("admin"))
async def cmd_admin(message: types.Message):
    if message.from_user.id == ADMIN_ID:
        await message.answer("üîë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=admin_keyboard())
    else:
        await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")

# --- –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–ü–û–ö ---
@dp.message(F.text.in_(["üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ", "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å", "‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å", "üö™ –í—ã–π—Ç–∏"]))
async def handle_admin_buttons(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")
        return

    if message.text == "üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ":
        rows = worksheet.get_all_values()
        text = "\n".join([", ".join(row) for row in rows]) if rows else "üìÇ –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞"
        await message.answer(f"–î–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã:\n\n{text}")

    elif message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å":
        worksheet.append_row(["–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å"])
        await message.answer("‚úÖ –ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞!")

    elif message.text == "‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å":
        rows = worksheet.get_all_values()
        if len(rows) > 1:
            worksheet.delete_rows(len(rows))
            await message.answer("‚ùå –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞")
        else:
            await message.answer("‚ö†Ô∏è –£–¥–∞–ª—è—Ç—å –Ω–µ—á–µ–≥–æ")

    elif message.text == "üö™ –í—ã–π—Ç–∏":
        await message.answer("–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–¥–º–∏–Ω–∫–∏.", reply_markup=ReplyKeyboardRemove())

# --- –§–æ–Ω–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
@app.on_event("startup")
async def on_startup():
    loop = asyncio.get_event_loop()
    loop.create_task(dp.start_polling(bot))

